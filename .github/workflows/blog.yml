name: Blog
on:
  push:
    branches:
      - dev
    paths:
      - "src-app/blog/**"
      - "posts/**"
      - "zhoubao/**"
  schedule:
    - cron: "0 4 * * SUN" # SUN-noon

jobs:
  release:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'docs(r)') || contains(github.event.schedule, '0 4 * * SUN')"
    steps:
      - run: sudo apt update
      - run: sudo apt -y upgrade
      - run: sudo apt install -y libpng-dev autoconf libpng-dev pkg-config nasm

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - run: curl -f https://get.pnpm.io/v6.js | node - add --global pnpm
      - run: pnpm install
      - run: pnpm appkit build blog
      - run: pnpm appkit release blog

  push-docker-image:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'docs(r)') || contains(github.event.schedule, '0 4 * * SUN')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Repo metadata
        id: repo
        uses: actions/github-script@v3
        with:
          script: |
            const repo = await github.repos.get(context.repo)
            return repo.data

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=fswq/blog
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%d')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./src-app/blog/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            maintainer=fengshangwuqi <fengshangwuqi@gmail.com>
            org.opencontainers.image.title=枫上雾棋的日志
            org.opencontainers.image.description=枫上雾棋的日志
            org.opencontainers.image.url=https://blog.fengshangwuqi.com
            org.opencontainers.image.source=${{ fromJson(steps.repo.outputs.result).clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ fromJson(steps.repo.outputs.result).license.spdx_id }}
